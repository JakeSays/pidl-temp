import 'dart:io';
import 'package:pidl/pidl.dart';
import 'package:pidlc/src/extensions.dart';
import 'package:pidlc/src/generator_issue.dart';
import 'code_writer.dart';
import 'generator_options.dart';

abstract class FileGenerator
{
    final CodeWriter code;
    final GeneratorOptions options;
    final Diagnostics diagnostics;

    late CompilationUnit _currentUnit;
    bool addNl = true;
    bool _firstDecl = true;

    CompilationUnit get currentUnit => _currentUnit;

    FileGenerator({
        required this.code,
        required this.options,
        required this.diagnostics
    });

    OutputInfo get output;

    void go(CompileResult compileResults)
    {
        for(final cu in compileResults.unitsInDependencyOrder)
        {
            _currentUnit = cu;
            final dirty = cu.version != output.version;
            if (!options.forceGeneration && !dirty)
            {
                diagnostics.addIssue(GeneratorIssue(
                    severity: IssueSeverity.info,
                    message: "Source idl file unchanged, generation skipped.",
                    definition: cu));
                continue;
            }

            code.deleteOutput(output.path);

            reset();
            code.reset();
            beginCompilationUnit();
            code.nl();
            _generateCu(cu);
            endCompilationUnit();
        }
    }

    void reset() => _firstDecl = true;
    
    bool get firstDecl
    {
        if (_firstDecl)
        {
            _firstDecl = false;
            return true;
        }

        return false;
    }

    void writeHeader(String message)
    {
        const pidlcVersion = "1.0.0";
        final dartVersion = Platform.version.split(' ')[0];
        final header =
'''
// ******************************DO NOT EDIT********************************
// *** This file was generated by pidlc version $pidlcVersion
// *** on ${DateTime.now().toLocal()}
// *** from '${currentUnit.source.path}'
// *** and contains $message.
// ***
// *** Any edits to this file will be lost the next time it is generated.
// *** You have been warned!
// ******************************DO NOT EDIT********************************
// @dart = $dartVersion
''';
        code.writeln(header);
    }

    void beginCompilationUnit()
    {}

    void endCompilationUnit()
    {
        code.save(output.path);
    }

    void _generateCu(CompilationUnit cu)
    {
        for (final defn in cu.declarationOrder)
        {            
            if (addNl)
            {
                addNl = false;
                code.nl();
            }

            if (defn is Namespace)
            {
                generateNamespace(defn);
                continue;
            }

            if (defn is Constant)
            {
                generateConst(defn);
                continue;
            }
            if (defn is Enum)
            {
                generateEnum(defn);
                continue;
            }
            if (defn is Struct)
            {
                generateStruct(defn);
                continue;
            }
            if (defn is Alias)
            {
                generateAlias(defn);
                continue;
            }
            if (defn is Interface)
            {
                generateInterface(defn);
            }
        }
    }

    void generateConst(Constant node) {}
    void generateEnum(Enum node) {}
    void generateStruct(Struct node) {}
    void generateAlias(Alias node) {}
    void generateNamespace(Namespace namespace) {}
    void generateInterface(Interface interface) {}
}
